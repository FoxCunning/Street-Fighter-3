MEMORY {
    MEM_00:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_01:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_02:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_03:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_04:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_05:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_06:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_07:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_08:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_09:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_0A:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_0B:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_0D:     start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_0E:     start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_0F:     start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_10:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_11:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_12:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_13:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_14:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_15:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_16:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_17:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_18:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_19:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_1A:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_1B:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_1C:		start = $A000, size = $2000, fill = yes, fillval = $FF;
	MEM_1D:		start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_FF:     start = $C000, size = $4000, fill = yes, fillval = $FF;
}

SEGMENTS {
    BANK_00:    load = MEM_00, align = $2000;
    BANK_01:    load = MEM_01, align = $2000;
    BANK_02:    load = MEM_02, align = $2000;
    BANK_03:    load = MEM_03, align = $2000;
    BANK_04:    load = MEM_04, align = $2000;
    BANK_05:    load = MEM_05, align = $2000;
    BANK_06:    load = MEM_06, align = $2000;
    BANK_07:    load = MEM_07, align = $2000;
    BANK_08:    load = MEM_08, align = $2000;
    BANK_09:    load = MEM_09, align = $2000;
    BANK_0A:    load = MEM_0A, align = $2000;
    BANK_0B:    load = MEM_0B, align = $4000;
    BANK_0D:    load = MEM_0D, align = $2000;
    BANK_0E:    load = MEM_0E, align = $2000;
    BANK_0F:    load = MEM_0F, align = $2000;
	BANK_10:    load = MEM_10, align = $2000;
	BANK_11:    load = MEM_11, align = $2000;
	BANK_12:    load = MEM_12, align = $2000;
	BANK_13:    load = MEM_13, align = $2000;
	BANK_14:    load = MEM_14, align = $2000;
	BANK_15:    load = MEM_15, align = $2000;
	BANK_16:    load = MEM_16, align = $2000;
	BANK_17:    load = MEM_17, align = $2000;
	BANK_18:    load = MEM_18, align = $2000;
	BANK_19:    load = MEM_19, align = $2000;
	BANK_1A:    load = MEM_1A, align = $2000;
	BANK_1B:    load = MEM_1B, align = $2000;
	BANK_1C:    load = MEM_1C, align = $2000;
	BANK_1D:    load = MEM_1D, align = $2000;
    BANK_FF:    load = MEM_FF, align = $4000;
    MMC5_INIT:  load = MEM_FF, start = $FFD0;
    VECTORS:    load = MEM_FF, start = $FFFA;
}